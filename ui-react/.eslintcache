[{"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Home.js":"1","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\App.js":"2","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\UserModel.js":"3","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuItems.js":"4","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\index.js":"5","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Membership.js":"6","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\index.js":"7","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Garage.js":"8","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Events.js":"9","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\EventDetail.js":"10","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Gallery.js":"11","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\auth\\auth0-provider-with-history.js":"12","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\theme.js":"13","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\SideBar.js":"14","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\ImageModel.js":"15","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\BaseModel.js":"16","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\permissions.js":"17","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\styles.js":"18","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js":"19","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Profile.js":"20","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuBar.js":"21","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\DateUtils.js":"22","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\GoogleMap.js":"23","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\About.js":"24","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Header.js":"25","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Loading.js":"26"},{"size":3853,"mtime":1638754329266,"results":"27","hashOfConfig":"28"},{"size":2494,"mtime":1638663932920,"results":"29","hashOfConfig":"28"},{"size":780,"mtime":1638643149163,"results":"30","hashOfConfig":"28"},{"size":1581,"mtime":1638658923838,"results":"31","hashOfConfig":"28"},{"size":147,"mtime":1634677167416,"results":"32","hashOfConfig":"28"},{"size":19866,"mtime":1638667118375,"results":"33","hashOfConfig":"28"},{"size":442,"mtime":1613420341639,"results":"34","hashOfConfig":"28"},{"size":9159,"mtime":1638666869149,"results":"35","hashOfConfig":"28"},{"size":16897,"mtime":1638667861760,"results":"36","hashOfConfig":"28"},{"size":3957,"mtime":1638667946739,"results":"37","hashOfConfig":"28"},{"size":2368,"mtime":1638667309275,"results":"38","hashOfConfig":"28"},{"size":809,"mtime":1635460137850,"results":"39","hashOfConfig":"28"},{"size":548,"mtime":1638639866128,"results":"40","hashOfConfig":"28"},{"size":2343,"mtime":1638658957481,"results":"41","hashOfConfig":"28"},{"size":197,"mtime":1638489419930,"results":"42","hashOfConfig":"28"},{"size":7820,"mtime":1638490744856,"results":"43","hashOfConfig":"28"},{"size":648,"mtime":1638496914556,"results":"44","hashOfConfig":"28"},{"size":805,"mtime":1638817995863,"results":"45","hashOfConfig":"28"},{"size":587,"mtime":1638119313051,"results":"46","hashOfConfig":"28"},{"size":2703,"mtime":1638666066085,"results":"47","hashOfConfig":"28"},{"size":2226,"mtime":1638709214089,"results":"48","hashOfConfig":"28"},{"size":1332,"mtime":1638475719776,"results":"49","hashOfConfig":"28"},{"size":737,"mtime":1638665905361,"results":"50","hashOfConfig":"28"},{"size":2996,"mtime":1638833476580,"results":"51","hashOfConfig":"28"},{"size":323,"mtime":1638666714622,"results":"52","hashOfConfig":"28"},{"size":585,"mtime":1634915506565,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11peuma",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Home.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\App.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\UserModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuItems.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\index.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Membership.js",[],["112","113"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\index.js",[],["114","115"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Garage.js",[],["116","117"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Events.js",["118","119"],"import { React, useState, useEffect } from 'react'\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Accordion  from 'react-bootstrap/Accordion'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Loading from '../components/Loading'\r\nimport Header from '../components/Header'\r\nimport dayjs from 'dayjs'\r\nimport { Permissions } from '../utils/permissions'\r\nimport NumberFormat from 'react-number-format'\r\nimport { EventModel } from '../models/EventModel'\r\nimport { CarModel } from '../models/CarModel'\r\nimport { DateUtils } from '../utils/DateUtils'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst eventModel = new EventModel()\r\nconst dateUtils = new DateUtils()\r\nconst eventStartTimeHours = 10\r\nlet defaultEventDate = dateUtils.nextDayOfWeekDate('sunday')\r\ndefaultEventDate.setHours(eventStartTimeHours)\r\ndefaultEventDate.setMinutes(0)\r\nlet defaultEventDateCtrl = dateUtils.formatDate(defaultEventDate, 'yyyy-mm-dd')\r\nconst defaultEventName = 'Round ' \r\n\r\nfunction Events() {\r\n  const history = useHistory()\r\n  const { user, isAuthenticated, loginWithRedirect, getAccessTokenSilently } = useAuth0()\r\n  const [name, setName] = useState(defaultEventName)\r\n  const [location, setLocation] = useState(\"Saint Anne's Park\")\r\n  const [date, setDate] = useState(defaultEventDateCtrl)\r\n  const [eventDate, setEventDate] = useState(defaultEventDate)\r\n  const [fee, setFee] = useState(10.00)\r\n  const [data, setData] = useState([])\r\n  const [currentEvent, setCurrentEvent] = useState([])\r\n  const [car_ids, setCar_ids] = useState([])\r\n  const [selClassIds, setSelClassIds] = useState([])\r\n  const [carData, setCarData] = useState([])\r\n  const [apiToken, setApiToken] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [allowAddEvents, setAllowAddEvents] = useState(false)\r\n  const [allowDelEvents, setAllowDelEvents] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n  const [showEnter, setShowEnter] = useState(false)\r\n  const [selectedEventId, setSelectedEventId] = useState('')\r\n  const [selectedEvent, setSelectedEvent] = useState()\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [loadingAllEvents, setLoadingAllEvents] = useState(false)\r\n  const [allEventsExpanded, setAllEventsExpanded] = useState(false)\r\n  const [editing, setEditing] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const handleCloseEnter = () => { \r\n    setCar_ids([])\r\n    setShowEnter(false) \r\n  }\r\n\r\n  useEffect(() => {\r\n    async function loadData () {\r\n      setLoading(true)\r\n      if (apiToken !== '' && user) {\r\n        try {\r\n          const eventModel = new EventModel(apiToken)\r\n          const carModel = new CarModel(apiToken)\r\n          const permissions = new Permissions()\r\n          setAllowAddEvents(permissions.check(apiToken, 'post', 'events'))\r\n          setAllowDelEvents(permissions.check(apiToken, 'delete', 'events'))\r\n          await eventModel.getCurrentEvent()\r\n          if (eventModel.success) {\r\n            if (eventModel.responseData.length > 0) {\r\n              setCurrentEvent(eventModel.responseData)\r\n              setSelectedEvent(eventModel.responseData[0])\r\n              setSelectedEventId(eventModel.responseData[0]._id)\r\n            }\r\n          } else {\r\n            window.alert(eventModel.message)\r\n          }\r\n          await carModel.getUserDocs(user.sub)\r\n          if (carModel.success) {\r\n            setCarData(carModel.responseData)\r\n          }  \r\n        } catch(e) {\r\n          window.alert(e)\r\n        } finally {\r\n          setAllEventsExpanded(false)\r\n          setLoading(false)\r\n        }\r\n      }\r\n    }  \r\n    loadData()\r\n  }, [refresh, user, apiToken, user.sub])\r\n\r\n  if (apiToken === '') {\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect()\r\n    } else {\r\n      getApiToken()\r\n    }\r\n  } else { \r\n    eventModel.setApiToken(apiToken)\r\n  }\r\n\r\n  async function getApiToken() {\r\n    let token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE })\r\n    eventModel.setApiToken(token)\r\n    setApiToken(token)   \r\n  }\r\n\r\n  async function handleShowEnter (e) { \r\n    await selectEvent(e.target.id.toString())\r\n    setShowEnter(true) \r\n  }\r\n\r\n  async function selectEvent(eventId){\r\n    await eventModel.get(eventId)\r\n    if (eventModel.success) {\r\n      setSelectedEventId(eventId)\r\n      setSelectedEvent(eventModel.responseData)   \r\n      return eventModel.responseData\r\n    } else {\r\n      setSelectedEventId('')\r\n      setSelectedEvent() \r\n      return\r\n    }\r\n  }\r\n\r\n  function addCar(id){\r\n    //TODO: Validate by checking there is only one car per class. Find car and Use setSelClassIds\r\n    //Needs to be done serer side also\r\n    if (car_ids.indexOf(id) === -1) {\r\n      car_ids.push(id)   \r\n    } else {\r\n      car_ids.splice(car_ids.indexOf(id), 1) \r\n    }\r\n    setCar_ids(car_ids)\r\n  }\r\n\r\n  function carInEvent(carId) {\r\n    let found = false\r\n    if (selectedEventId !== '') {\r\n      if (selectedEvent && selectedEvent.hasOwnProperty('car_ids')) {\r\n        for (var car_id of selectedEvent.car_ids) {\r\n          found = car_id === carId \r\n          if (found) { \r\n            if (car_ids.indexOf(carId) === -1) {\r\n              car_ids.push(carId) \r\n            }\r\n            break \r\n          }\r\n        }\r\n      }\r\n    }\r\n    return found\r\n  }\r\n\r\n  async function deleteEvent() {\r\n    try {\r\n      if (window.confirm('Are you sure you want to delete this event?')) {\r\n        await eventModel.delete(selectedEventId.toString())\r\n        if (eventModel.success) {\r\n          setRefresh(!refresh)\r\n          handleClose()\r\n        } else {\r\n          window.alert(eventModel.message)\r\n        }\r\n      }\r\n    } catch(e) {\r\n      window.alert(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function postEvent() {\r\n    try {\r\n      let date = eventDate\r\n      await eventModel.post({name, location, date, fee})\r\n      if (eventModel.success) {\r\n        setRefresh(!refresh)\r\n        handleClose()\r\n      } else {\r\n        window.alert(eventModel.message) \r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function putEvent() {\r\n    try {\r\n      let date = eventDate\r\n      await eventModel.put(selectedEventId, {name, location, date, fee})\r\n      if (eventModel.success) {\r\n        setRefresh(!refresh)\r\n        handleClose()\r\n      } else {\r\n        window.alert(eventModel.message) \r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function enterEvent() {\r\n    try {    \r\n      await eventModel.enterEvent(selectedEventId, car_ids)\r\n      if (eventModel.success) {\r\n        setRefresh(!refresh)\r\n        handleCloseEnter()\r\n      } else {\r\n        window.alert(eventModel.message)  \r\n      }\r\n    } catch(e) {\r\n      window.alert(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  function eventDateChange(stringDate) {\r\n    let date = new Date(stringDate)\r\n    date.setHours(eventStartTimeHours)\r\n    setEventDate(date)\r\n    setDate(stringDate)  \r\n  }\r\n\r\n  /*function nextEventExpand(){\r\n    if (currentEvent && currentEvent.length > 0) {\r\n      return '0'\r\n    } else {\r\n      return '1'  \r\n    }\r\n  }\r\n\r\n  function allEventsExpand(){\r\n    if (currentEvent && currentEvent.length > 0) {\r\n      return '1'\r\n    } else {\r\n      return '0'  \r\n    }  \r\n  }*/\r\n\r\n  async function allEventsClick(){\r\n    try {\r\n      if (!allEventsExpanded) {\r\n        setLoadingAllEvents(true)\r\n        await eventModel.get()\r\n        if (eventModel.success) {\r\n          setData(eventModel.responseData)\r\n        }  \r\n      } \r\n    } finally {\r\n      setLoadingAllEvents(false)\r\n      setAllEventsExpanded(!allEventsExpanded)\r\n    }\r\n  }\r\n\r\n  function showEventDetails(e) {\r\n    history.push('/events/'+e.target.id)\r\n  }\r\n\r\n  function getCurrentEventCard(){\r\n    if (loading) {\r\n      return <div className=\"text-center\">\r\n               <Spinner animation=\"border\" variant=\"primary\"/>\r\n             </div>\r\n    } else if (currentEvent && currentEvent.length > 0) {\r\n      return <div style={{display: 'flex', flexFlow: 'wrap'}}>\r\n              {addCards(currentEvent, true)}\r\n            </div>  \r\n    } else {\r\n      return ( <h4>No upcoming event</h4> )\r\n    }\r\n  }\r\n\r\n  function getAllEventCards(){\r\n    if (loadingAllEvents) {\r\n      return <div className=\"text-center\">\r\n               <Spinner animation=\"border\" variant=\"primary\"/>\r\n             </div>\r\n    } else if (data && data.length > 0) {\r\n      return (\r\n        <div style={{display: 'flex', flexFlow: 'wrap'}}>\r\n          {addCards(data)}\r\n        </div>    \r\n      )\r\n    } else {\r\n      return ( <h4>No events</h4> )\r\n    }\r\n  }\r\n\r\n  async function editEvent(e) {\r\n    let selEvent = await selectEvent(e.target.id.toString())\r\n    if (selEvent) {\r\n      setEditing(true)\r\n      setName(selEvent.name)\r\n      setLocation(selEvent.location)\r\n      setEventDate(new Date(selEvent.date))\r\n      setDate(dateUtils.formatDate(new Date(selEvent.date), 'yyyy-mm-dd')) \r\n      setFee(selEvent.fee)\r\n      handleShow()\r\n    } else {\r\n      window.alert('Error loading event')\r\n    }\r\n  } \r\n\r\n  function addEvent() {\r\n    setEditing(false)\r\n    setName(defaultEventName)\r\n    setLocation(\"Saint Anne's Park\")\r\n    setEventDate(defaultEventDate)\r\n    setDate(defaultEventDateCtrl) \r\n    setFee(10)\r\n    handleShow()\r\n  } \r\n\r\n  function saveEvent(){\r\n    if (editing) {\r\n      putEvent(selectedEventId.toString())\r\n    } else {\r\n      postEvent()\r\n    }\r\n  }\r\n\r\n  function addCards(events, showEnter) {\r\n    return (\r\n      events.map((event) => (\r\n        <Card style={{minWidth: '225px', maxWidth: '225px', margin: '3px', zIndex: 0}} key={event._id}>\r\n          <Card.Header>{event.name}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>{event.location}</Card.Title>\r\n            <Card.Text>Entry fee €{event.fee}</Card.Text>\r\n            <Card.Text>{dayjs(event.date).format('DD/MM/YYYY')}</Card.Text>\r\n            {showEnter && <Button onClick={handleShowEnter} id={event._id}  style={{width: \"100%\"}} variant=\"outline-primary\">Enter</Button> } \r\n            <Button id={event._id} onClick={showEventDetails} style={{marginTop: \"3px\", width: \"100%\"}} variant=\"outline-secondary\">Details</Button>\r\n            {allowDelEvents && <Button id={event._id} style={{marginTop: \"3px\", width: \"100%\"}} onClick={editEvent} variant=\"outline-warning\">Edit</Button> }\r\n          </Card.Body>\r\n        </Card>)\r\n      )\r\n    )\r\n  }\r\n\r\n  function headerText(){\r\n    if (editing) {\r\n      return 'Edit event'\r\n    } else {\r\n      return 'Add event'\r\n    }\r\n  }\r\n  \r\n  function modalForm(){\r\n    return ( \r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n        <Modal.Title>{headerText()}</Modal.Title>\r\n        </Modal.Header>\r\n          <Modal.Body style={{ display: 'grid', fontFamily: \"monospace\"}} >\r\n            <label style={{ margin: '3px' }} >\r\n              Name: &nbsp;&nbsp;&nbsp;&nbsp; \r\n              <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" id=\"eventName\" name=\"event-name\" />\r\n            </label>\r\n            <label style={{ margin: '3px' }} >\r\n              Location: <input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" id=\"eventLocation\" name=\"event-location\" />\r\n            </label>\r\n            <label style={{ margin: '3px' }} >\r\n              Date: &nbsp;&nbsp;&nbsp;&nbsp;\r\n              <input style={{minWidth: '197px'}} value={date} onChange={(e) => eventDateChange(e.target.value)} type=\"date\" id=\"eventDate\" name=\"event-date\" min={defaultEventDateCtrl} />\r\n            </label>\r\n            <label style={{ margin: '3px' }} >\r\n              Fee: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              <NumberFormat id=\"eventFee\" name=\"event-fee\"  value={fee} onChange={(e) => setFee(e.target.value)} thousandSeparator={ true } prefix={ \"€\" } />\r\n            </label>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          {allowDelEvents && editing && <Button onClick={deleteEvent} variant=\"outline-danger\">Delete</Button> }\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"outline-primary\" onClick={saveEvent}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  function modalEnterEvent(){\r\n    function carCheckList () {\r\n      function carItem(car, index) {\r\n        return (\r\n          <InputGroup key={car._id+index} className=\"mb-3\">\r\n            <InputGroup.Checkbox key={car._id} id={car._id} defaultChecked={carInEvent(car._id)} onChange={(e) => addCar(e.target.id)} aria-label=\"Checkbox for following text input\" />\r\n            <FormControl key={car._id+'-FormControl'} onChange={(e) => addCar(e.target.id)} value={car.manufacturer+' - '+car.model } aria-label=\"Text input with checkbox\" />\r\n          </InputGroup>\r\n        )\r\n      }    \r\n      return (\r\n        <>\r\n          {carData && carData.map((car, index) => carItem(car, index) ) }\r\n        </>  \r\n      )\r\n    }\r\n    return ( \r\n      <Modal show={showEnter} onHide={handleCloseEnter}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Enter Event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ display: 'grid', fontFamily: \"monospace\"}} >\r\n          <p>Select your car(s)</p>\r\n          {carCheckList()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseEnter}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"outline-primary\" onClick={enterEvent}>\r\n              Enter Event\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  //for split second, data is still undefined although loading state was set to true after data set was set \r\n  if (loading) {\r\n    return ( <Loading /> )\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Header props={{header:'Events'}} />\r\n        {allowAddEvents && <Button onClick={addEvent} style={{marginLeft: \"3px\", marginBottom: \"3px\"}} variant=\"outline-primary\">Add Event</Button> }\r\n        {modalForm()}\r\n        {modalEnterEvent()}\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"0\">\r\n            <StyledAccordionHeader>Next Event</StyledAccordionHeader>\r\n            <Accordion.Body>\r\n              {getCurrentEventCard()} \r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <StyledAccordionHeader onClick={allEventsClick}>All Events</StyledAccordionHeader>\r\n            <Accordion.Body>\r\n              {getAllEventCards()} \r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst StyledAccordionHeader  = styled(Accordion.Header)`\r\n  .accordion-button:focus {\r\n    z-index: 0\r\n  }\r\n`\r\n\r\nexport default withAuthenticationRequired(Events, { onRedirecting: () => (<Loading />) });\r\n\r\n//Alternative to declaring functions such as loadData() in useEffect(). Memoize with useCallback()\r\n/* \r\nfunction MyComponent() {\r\n\r\n  const [data, setData] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const { logout, loginWithRedirect,  user, isAuthenticated, getAccessTokenSilently } = useAuth0()\r\n  var profilePic = DefaultProfilePng\r\n  var username = 'Sign In'\r\n\r\n  if (user != null) {\r\n    console.log(user)    \r\n    token = getApiToken();\r\n    console.log(token)\r\n    profilePic = user.picture\r\n    if (user.name != null) {\r\n      username = user.name;\r\n    } else {\r\n      username = user.nickname;\r\n    }\r\n  }\r\n\r\n  //Alternative to declaring function in useEffect: Memoize with useCallback()\r\n  const loadData= useCallback(() => {\r\n    //Request code here\r\n    }, [])\r\n  useEffect(() => {\r\n      loadData()\r\n  }, [loadData])\r\n \r\n  async function getApiToken() {\r\n    return await getAccessTokenSilently();\r\n  }\r\n  \r\n  const loadAsyncData = async () => {\r\n  \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const resp = await fetch('https://...').then(r=>r.json());\r\n      setData(resp);\r\n      setIsLoading(false);\r\n    } catch(e) {\r\n      setError(e);\r\n      setIsLoading(false);\r\n    }\r\n    \r\n  }\r\n  \r\n  useEffect(() => {\r\n    \r\n    loadAsyncData();\r\n    \r\n  }, []);\r\n  \r\n    \r\n  if(this.state.isLoading) return (<p>Loading...</p>);\r\n  if(this.state.error) return (<p>Something went wrong</p>);\r\n  if(this.state.data) return (<p>The data is: {data}</p>);\r\n  return (<p>No data yet</p>);\r\n    \r\n}\r\n\r\n*/",["120","121"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\EventDetail.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Gallery.js",["122"],"import { React, useState, useEffect } from 'react'\r\n//https://openbase.com/js/react-image-gallery\r\nimport ImageGallery from 'react-image-gallery'\r\nimport 'react-image-gallery/styles/scss/image-gallery.scss'\r\nimport 'react-image-gallery/styles/css/image-gallery.css'\r\nimport { ImageModel } from '../models/ImageModel'\r\nimport Loading from '../components/Loading'\r\nimport Header from '../components/Header'\r\n\r\nfunction Home() {\r\n  const [images, setImages] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    async function loadData () {\r\n      setLoading(true)\r\n      try {\r\n        const imageModel = new ImageModel()\r\n        await imageModel.get()\r\n        if (imageModel.success) {\r\n          if (imageModel.responseData.length > 0) {\r\n            setImages(imageModel.responseData)\r\n          }\r\n        } else {\r\n          window.alert(imageModel.message)\r\n        }\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }  \r\n    loadData()\r\n  }, [])\r\n\r\n  if (loading) {\r\n    return ( <Loading /> )\r\n  } else if (images.length === 0) {\r\n  return (\r\n    <h2>No images</h2>)\r\n  } else {\r\n    return (\r\n      <>\r\n        <div style={{width:'100%', height:'100%', alignItems: 'center', position: 'relative'}}> \r\n          <ImageGallery items={images} /> \r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n/*const HomeContainer = styled.div`\r\n  font-family: ${({ theme}) => theme.mainFont};\r\n  padding: 6px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: 'flex';\r\n  alignItems: 'center';\r\n  justifyContent: 'center';\r\n`;\r\n\r\n\r\n<div style={{ alignSelf: 'center', textAlign: 'center', display: 'grid',  justifyContent:'center', alignItems:'center', height: 'auto'}}>\r\n  <h1>On Road Circuit Association</h1>\r\n  <div style={{width: '100%'}}>\r\n    <img style={{maxWidth: '50%', maxHeight: '50%'}} src={CircuitLogo} alt=\"Circuit Logo\"></img>\r\n  </div>  \r\n  <h2> Ireland's only 1/8 scale on road circuit</h2>\r\n  <span>St.Anne's Park, Raheny, Dublin, Ireland</span>\r\n  <div style={{width: '100%', maxHeight: '100%'}}>\r\n    <img style={{maxWidth: '100%', maxHeight: '50%'}} src={SaintAnnesTrack} alt=\"Saint Annes Track\"></img>\r\n  </div>\r\n</div>\r\n\r\nconst HeaderContainer = styled.div`\r\n  font-family: ${({ theme}) => theme.mainFont};\r\n  text-align: centre;\r\n  alignItems: 'center';\r\n  justifyContent: 'center';\r\n`;*/\r\n\r\nexport default Home\r\n","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\auth\\auth0-provider-with-history.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\theme.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\SideBar.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\ImageModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\BaseModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\permissions.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\styles.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Profile.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuBar.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\DateUtils.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\GoogleMap.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\About.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Header.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Loading.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"123","replacedBy":"129"},{"ruleId":"125","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":41,"column":10,"nodeType":"133","messageId":"134","endLine":41,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":41,"column":23,"nodeType":"133","messageId":"134","endLine":41,"endColumn":37},{"ruleId":"123","replacedBy":"136"},{"ruleId":"125","replacedBy":"137"},{"ruleId":"131","severity":1,"message":"138","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":14},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],["139"],["140"],"no-unused-vars","'selClassIds' is assigned a value but never used.","Identifier","unusedVar","'setSelClassIds' is assigned a value but never used.",["139"],["140"],"'Header' is defined but never used.","no-global-assign","no-unsafe-negation"]