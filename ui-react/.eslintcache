[{"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\App.js":"1","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Loading.jsx":"2","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\ClassModel.js":"3","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\BrandsBand.jsx":"4","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MenuItems.jsx":"5","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\index.js":"6","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Polls.jsx":"7","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Seasons.jsx":"8","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\index.js":"9","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\EventDetail.jsx":"10","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Events.jsx":"11","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Garage.jsx":"12","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\NewsArticle.jsx":"13","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\SeasonModel.js":"14","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Membership.jsx":"15","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Gallery.jsx":"16","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EventTypeModel.js":"17","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Articles.jsx":"18","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\VideoModel.js":"19","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\MemberTypes.js":"20","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\BaseModel.js":"21","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\PencilSquare.jsx":"22","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\PaypalTxSearchTable.jsx":"23","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\SideBar.jsx":"24","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\utils\\Validator.js":"25","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Home.jsx":"26","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\TrashCan.jsx":"27","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EventModel.js":"28","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\reportWebVitals.js":"29","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MemberCard.jsx":"30","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\UserModel.js":"31","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\MembershipModel.js":"32","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\hooks\\useApiToken.js":"33","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\EmailActiveMembersForm.jsx":"34","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\SeasonDetail.jsx":"35","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js":"36","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EmailActiveMembersModel.js":"37","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\SeasonReport.jsx":"38","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MenuBar.jsx":"39","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\GoogleMap.jsx":"40","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\styles.js":"41","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\UnsubscribeModel.js":"42","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Unsubscribe.jsx":"43","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\RaceModel.js":"44","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\GearButton.jsx":"45","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\theme.js":"46","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Header.jsx":"47","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Profile.jsx":"48","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\PollModel.js":"49","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\About.jsx":"50","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\CarModel.js":"51","C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\EventDetailOld.jsx":"52"},{"size":2854,"mtime":1713464204197,"results":"53","hashOfConfig":"54"},{"size":585,"mtime":1689966429459,"results":"55","hashOfConfig":"54"},{"size":199,"mtime":1689966429462,"results":"56","hashOfConfig":"54"},{"size":1911,"mtime":1689966429458,"results":"57","hashOfConfig":"54"},{"size":1680,"mtime":1715725821341,"results":"58","hashOfConfig":"54"},{"size":436,"mtime":1689966429461,"results":"59","hashOfConfig":"54"},{"size":17501,"mtime":1689966429467,"results":"60","hashOfConfig":"54"},{"size":15934,"mtime":1738095126959,"results":"61","hashOfConfig":"54"},{"size":144,"mtime":1689966429460,"results":"62","hashOfConfig":"54"},{"size":24307,"mtime":1724363679817,"results":"63","hashOfConfig":"54"},{"size":21812,"mtime":1738096128915,"results":"64","hashOfConfig":"54"},{"size":9933,"mtime":1715725915729,"results":"65","hashOfConfig":"54"},{"size":1599,"mtime":1689966429459,"results":"66","hashOfConfig":"54"},{"size":2625,"mtime":1692833472734,"results":"67","hashOfConfig":"54"},{"size":29805,"mtime":1724276673491,"results":"68","hashOfConfig":"54"},{"size":2455,"mtime":1689966429466,"results":"69","hashOfConfig":"54"},{"size":207,"mtime":1689966429462,"results":"70","hashOfConfig":"54"},{"size":8366,"mtime":1689966429465,"results":"71","hashOfConfig":"54"},{"size":195,"mtime":1689966429463,"results":"72","hashOfConfig":"54"},{"size":205,"mtime":1689966429462,"results":"73","hashOfConfig":"54"},{"size":7257,"mtime":1713380022577,"results":"74","hashOfConfig":"54"},{"size":482,"mtime":1689966429459,"results":"75","hashOfConfig":"54"},{"size":6869,"mtime":1724363930476,"results":"76","hashOfConfig":"54"},{"size":3185,"mtime":1724442730574,"results":"77","hashOfConfig":"54"},{"size":800,"mtime":1689966429465,"results":"78","hashOfConfig":"54"},{"size":1494,"mtime":1689966429466,"results":"79","hashOfConfig":"54"},{"size":460,"mtime":1689966429460,"results":"80","hashOfConfig":"54"},{"size":2787,"mtime":1713629922258,"results":"81","hashOfConfig":"54"},{"size":367,"mtime":1689966429464,"results":"82","hashOfConfig":"54"},{"size":5921,"mtime":1713628410885,"results":"83","hashOfConfig":"54"},{"size":2046,"mtime":1712970560430,"results":"84","hashOfConfig":"54"},{"size":1683,"mtime":1714420304528,"results":"85","hashOfConfig":"54"},{"size":562,"mtime":1713896518102,"results":"86","hashOfConfig":"54"},{"size":2997,"mtime":1713462969574,"results":"87","hashOfConfig":"54"},{"size":5695,"mtime":1724464746916,"results":"88","hashOfConfig":"54"},{"size":587,"mtime":1689966429465,"results":"89","hashOfConfig":"54"},{"size":688,"mtime":1713294065575,"results":"90","hashOfConfig":"54"},{"size":9804,"mtime":1724466624463,"results":"91","hashOfConfig":"54"},{"size":1860,"mtime":1689966429459,"results":"92","hashOfConfig":"54"},{"size":737,"mtime":1689966429458,"results":"93","hashOfConfig":"54"},{"size":462,"mtime":1689966429461,"results":"94","hashOfConfig":"54"},{"size":328,"mtime":1713552552115,"results":"95","hashOfConfig":"54"},{"size":1531,"mtime":1713469133133,"results":"96","hashOfConfig":"54"},{"size":725,"mtime":1689966429463,"results":"97","hashOfConfig":"54"},{"size":820,"mtime":1689966429458,"results":"98","hashOfConfig":"54"},{"size":602,"mtime":1724360442191,"results":"99","hashOfConfig":"54"},{"size":433,"mtime":1689966429458,"results":"100","hashOfConfig":"54"},{"size":3179,"mtime":1724442730575,"results":"101","hashOfConfig":"54"},{"size":1590,"mtime":1689966429463,"results":"102","hashOfConfig":"54"},{"size":2921,"mtime":1689966429465,"results":"103","hashOfConfig":"54"},{"size":1292,"mtime":1689966429461,"results":"104","hashOfConfig":"54"},{"size":23085,"mtime":1724363772863,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sj6150",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\App.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Loading.jsx",[],["226","227"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\ClassModel.js",[],["228","229"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\BrandsBand.jsx",[],["230","231"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MenuItems.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\index.js",[],["232","233"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Polls.jsx",[],["234","235"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Seasons.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\index.js",[],["236","237"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\EventDetail.jsx",["238"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Events.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Garage.jsx",[],["239","240"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\NewsArticle.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\SeasonModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Membership.jsx",[],["241","242"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Gallery.jsx",[],["243","244"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EventTypeModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Articles.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\VideoModel.js",[],["245","246"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\MemberTypes.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\BaseModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\PencilSquare.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\PaypalTxSearchTable.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\SideBar.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\utils\\Validator.js",[],["247","248"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Home.jsx",[],["249","250"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\TrashCan.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EventModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\reportWebVitals.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MemberCard.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\UserModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\MembershipModel.js",[],["251","252"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\hooks\\useApiToken.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\EmailActiveMembersForm.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\SeasonDetail.jsx",["253"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\EmailActiveMembersModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\SeasonReport.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\MenuBar.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\GoogleMap.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\styles.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\UnsubscribeModel.js",[],["254","255"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\Unsubscribe.jsx",[],["256","257"],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\RaceModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\GearButton.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\theme.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Header.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\components\\Profile.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\PollModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\About.jsx",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\models\\CarModel.js",[],"C:\\Code\\GitHub\\orca-ireland\\ui-react\\src\\views\\EventDetailOld.jsx",["258"],"import { React, useState, useEffect } from 'react'\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\"\r\nimport Loading from '../components/Loading'\r\nimport Header from '../components/Header'\r\nimport { EventModel } from '../models/EventModel'\r\nimport { CarModel } from '../models/CarModel'\r\nimport { ClassModel } from '../models/ClassModel'\r\nimport { RaceModel } from '../models/RaceModel'\r\nimport { useParams } from 'react-router-dom'\r\n//import Form from 'react-bootstrap/Form'\r\nimport Table  from 'react-bootstrap/Table'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport dayjs from 'dayjs'\r\nimport { Permissions } from '../utils/permissions'\r\nimport { PlusButton } from '../components/PlusButton'\r\nimport { TrashCan } from '../components/TrashCan'\r\nimport { PencilSquare } from '../components/PencilSquare'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst raceModel = new RaceModel() \r\nconst carModel = new CarModel()\r\nconst eventModel = new EventModel()\r\ncarModel.useExtId = false\r\nconst max_per_race = 50\r\nlet currentCar = {}\r\n\r\nfunction EventDetailOld() {\r\n  let { id } = useParams()\r\n  const history = useHistory()\r\n  const { user, isAuthenticated, loginWithRedirect, getAccessTokenSilently } = useAuth0()\r\n  const [apiToken, setApiToken] = useState('')\r\n  const [ownerName, setOwnerName] = useState('')\r\n  const [event, setEvent] = useState()\r\n  const [refresh, setRefresh] = useState()\r\n  const [classes, setClasses] = useState()\r\n  const [loading, setLoading] = useState()\r\n  const [userCars, setUserCars] = useState()\r\n  const [allowAddRaces, setAllowAddRaces] = useState(false)\r\n  const [allowDelRaces, setAllowDelRaces] = useState(false)\r\n  const [raceName, setRaceName] = useState('Final')\r\n  const [classId, setClassId] = useState('')\r\n  const [carId, setCarId] = useState('')\r\n  const [oldCarId, setOldCarId] = useState('')\r\n  const [resultsMap, setResultsMap] = useState(new Map())\r\n  const [showRaceForm, setShowRaceForm] = useState(false)\r\n  const closeRaceForm = () => setShowRaceForm(false)\r\n  const displayRaceForm = () => setShowRaceForm(true)\r\n  const [showChangeCarForm, setShowChangeCarForm] = useState(false) \r\n  const hideUserCarModal = () => setShowChangeCarForm(false)\r\n  const [carsAwaitingPayment, setCarsAwaitingPayment] = useState([])\r\n  const [allCars, setAllCars] = useState([])\r\n  const [entryPaid, setEntryPaid] = useState(false)\r\n  const [allowEditEvents, setAllowEditEvents] = useState(false)\r\n  const [allowEditPaidUsers, setAllowEditPaidUsers] = useState(false)\r\n  const [allowViewUnPaidUsers, setAllowViewUnPaidUsers] = useState(false)\r\n  const [allowViewPayments, setAllowViewPayments] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function loadData () {\r\n      setLoading(true)\r\n      if (apiToken !== '') {\r\n        try {\r\n          const eventModel = new EventModel(apiToken)\r\n          eventModel.urlParams = '?detail=1'\r\n          const classModel = new ClassModel(apiToken)\r\n          const permissions = new Permissions()\r\n          setAllowEditEvents(permissions.check(apiToken, 'put', 'events'))\r\n          setAllowEditPaidUsers(permissions.check(apiToken, 'put', 'paid_users'))\r\n          setAllowViewUnPaidUsers(permissions.check(apiToken, 'view', 'unpaid_users'))\r\n          setAllowAddRaces(permissions.check(apiToken, 'post', 'races'))\r\n          setAllowDelRaces(permissions.check(apiToken, 'delete', 'races'))\r\n          setAllowViewPayments(permissions.check(apiToken, 'get', 'payments'))\r\n         \r\n          await eventModel.get(id)\r\n          if (eventModel.success) {\r\n            if (permissions.check(apiToken, 'get', 'payments')) {\r\n              const paymentsModel = new EventModel(apiToken)\r\n              await paymentsModel.getEventPayments(id)\r\n              if (paymentsModel.success) {\r\n                eventModel.responseData.payments = paymentsModel.responseData\r\n              } else {\r\n                window.alert(paymentsModel.message)\r\n              }\r\n            }\r\n            const paidEvent = !!eventModel.responseData.fee;\r\n            const hasPaidUserIds = !!eventModel.responseData.paid_user_ids;\r\n            setAllCars(eventModel.responseData.cars)\r\n            const carsAwaitingPayment = eventModel.responseData.cars\r\n              .filter(car => paidEvent && !car.user.paymentExempt && !(hasPaidUserIds && eventModel.responseData.paid_user_ids.includes(car.user._id)))\r\n            const carsPaid = eventModel.responseData.cars\r\n              .filter(car => (!paidEvent || !!car.user.paymentExempt) || (hasPaidUserIds && eventModel.responseData.paid_user_ids.includes(car.user._id)));\r\n            eventModel.responseData.cars = carsPaid\r\n            setCarsAwaitingPayment(carsAwaitingPayment || [])\r\n            setEvent(eventModel.responseData)\r\n            await classModel.get()\r\n            if (classModel.success) {\r\n              setClasses(classModel.responseData)\r\n            } else {\r\n              window.alert(classModel.message)\r\n            }\r\n          } else {\r\n            setEvent()\r\n            window.alert(eventModel.message)\r\n            history.push('/events')\r\n          }\r\n        } finally {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    }  \r\n    loadData()\r\n  }, [id, apiToken, user.sub, refresh, history])\r\n\r\n  if (apiToken === '') {\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect()\r\n    } else {\r\n      getApiToken()\r\n    }\r\n  } else {\r\n    raceModel.setApiToken(apiToken)\r\n    carModel.setApiToken(apiToken)\r\n    eventModel.setApiToken(apiToken)\r\n  }\r\n\r\n  function getClassName(id) {\r\n    let carClass\r\n    if (classes && classes.length !== 0) {\r\n      carClass = classes.find(c => c._id === id)\r\n    } \r\n    if (carClass) {\r\n      return carClass.name\r\n    } else {\r\n      return ''\r\n    } \r\n  }\r\n\r\n  async function getApiToken() {\r\n    try { \r\n      const token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE })\r\n      setApiToken(token)   \r\n    } catch(e) {\r\n      console.log(e)\r\n      loginWithRedirect()\r\n    }\r\n  }\r\n\r\n  async function changeCar(carId) {\r\n    setCarId(carId)\r\n    setOldCarId(carId)\r\n    setOwnerName(carIdToUserName(carId))\r\n    let success = false\r\n    success = await carModel.get(carId)\r\n    if (success) {\r\n      carModel.urlParams = '?user_id='+carModel.responseData.user_id\r\n      success = await carModel.get()\r\n    }\r\n    if (success) {\r\n      setUserCars(carModel.responseData)\r\n      const item = carModel.responseData[0]\r\n      setEntryPaid(event.paid_user_ids && event.paid_user_ids.includes(item.user_id))\r\n      setShowChangeCarForm(true)\r\n    } else {\r\n      window.alert(carModel.message)\r\n    }\r\n  }\r\n\r\n  function addRacers(cars, class_id, dontCheckClass) {\r\n    function addTableRow(car, index){\r\n      return (\r\n        <tr key={index+'-racersRow'}>\r\n          <td>{car.user.firstName+' '+car.user.lastName}</td>\r\n          <td>{car?.manufacturer}</td>\r\n          <td>{car.model}</td>\r\n          <td>{car.color}</td>\r\n          <td>{car.transponder}</td>\r\n          {allowAddRaces && \r\n            <td>\r\n              <PencilSquare key={car._id+'-change-car'} id={car._id} handleClick={() => changeCar(car._id)} />\r\n            </td>}\r\n        </tr>\r\n      )\r\n    }  \r\n    \r\n    return cars.map((car, index) => \r\n      dontCheckClass || car.class_id === class_id \r\n        ? addTableRow(car, index) \r\n        : <></>\r\n    );\r\n  }\r\n\r\n  function carIdToUserName(carId) {\r\n    for (let car of event.cars) {\r\n      if (car._id === carId) {\r\n        return car.user.firstName  \r\n      } \r\n    }\r\n  }\r\n\r\n  function classesWithEntries(classes) {\r\n    let arr = []\r\n    if (classes && event) {\r\n      for (var car of event.cars) {\r\n        for (var cls of classes) {\r\n          if (car.class_id === cls._id && arr.indexOf(cls) === -1)\r\n            arr.push(cls)\r\n        }\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  function addRace(classId) {\r\n    resultsMap.clear()\r\n    setClassId(classId)\r\n    displayRaceForm()\r\n  }\r\n\r\n  async function postRace() {  \r\n    const date = event.date\r\n    const event_id = event._id\r\n    const class_id = classId \r\n    const name = raceName\r\n    const class_name = getClassName(class_id)\r\n    const results = [...resultsMap.values()]\r\n    const race = {event_id, class_id, class_name, date, name, results} \r\n    await raceModel.post(race)\r\n    if (raceModel.success) {\r\n      setRefresh(!refresh)\r\n      setShowRaceForm(false)\r\n    } else {\r\n      window.alert(raceModel.message) \r\n    }\r\n  }\r\n\r\n  async function deleteRace(raceId) {\r\n    if (window.confirm('Are you sure you want to delete this race?')) {\r\n      await raceModel.delete(raceId)\r\n      if (raceModel.success) {\r\n        setRefresh(!refresh)\r\n        setShowRaceForm(false)\r\n      } else {\r\n        window.alert(raceModel.message) \r\n      }\r\n    }\r\n  }\r\n\r\n  function onRaceInputChange(e) {\r\n    const name = e.target.value\r\n    const position = parseInt(e.target.id)\r\n    if (name !== '') {\r\n      const car_id = e.target.childNodes[e.target.selectedIndex].getAttribute('id')\r\n      resultsMap.set(position, { position, name, car_id } )\r\n    } else {\r\n      resultsMap.delete(position)  \r\n    }\r\n    setResultsMap(resultsMap)\r\n  }\r\n\r\n  function shouldAdd(cars, position){\r\n    let count = 0\r\n    for (var car of cars) {\r\n      if (car.class_id === classId) {\r\n        ++count\r\n      } \r\n    }\r\n    return position <= count\r\n  }\r\n\r\n  function raceForm() {\r\n    function racers(pos, onValueChange) { \r\n      return (\r\n        <select onChange={(e) => onValueChange(e)} key={pos} id={pos} style={{width: '250px', height: '30px'}} > \r\n          <option value=\"\">--Select racer--</option>\r\n          {event.cars.map((car) => {\r\n            if (car.class_id === classId) { \r\n              return <option key={car._id} id={car._id} value={car.user.firstName+' '+car.user.lastName} >{car.user.firstName+' '+car.user.lastName} </option>    \r\n            } else {\r\n              return <></>\r\n            }\r\n          })}\r\n        </select>  \r\n      )\r\n    }\r\n    function intToPositionText(int) {\r\n      let position = ''\r\n      switch(int) {\r\n        case 1:\r\n          position = int+'st'\r\n          break;\r\n        case 2:\r\n          position = int+'nd'\r\n          break;\r\n        case 3:\r\n          position = int+'rd'\r\n          break;\r\n        default:\r\n          position = int+'th'\r\n          break;\r\n      }\r\n      return position\r\n    }\r\n    function getNbsp(pos) {\r\n      if (pos >= 10) return ( <> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </> )\r\n      return ( <> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </> )\r\n    }\r\n    function addInput(pos) { \r\n      return <label key={'label-'+pos} style={{ margin: '3px' }} >\r\n              {intToPositionText(pos)+':'} {getNbsp(pos)}\r\n              {racers(pos, (e) => onRaceInputChange(e))}  \r\n             </label>\r\n    }\r\n    function addInputs(){\r\n      if (event && event.cars.length !== 0) {\r\n        var inputs = []\r\n        for (let i=1; i<=max_per_race; i++) {\r\n          if (shouldAdd(event.cars, i)) {\r\n            inputs.push(addInput(i))\r\n          } else {\r\n            break\r\n          }\r\n        }\r\n        return inputs\r\n      }\r\n    }\r\n    \r\n    return (  \r\n      <Modal show={showRaceForm} onHide={closeRaceForm} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Race ({getClassName(classId)})</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ display: 'grid', fontFamily: \"monospace\"} } >\r\n          <label style={{ margin: '3px' }} >\r\n            Race Name: &nbsp; \r\n            <input style={{width: '250px'}} value={raceName} onChange={(e) => setRaceName(e.target.value)} type=\"text\" />\r\n          </label> \r\n          {addInputs()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={closeRaceForm}>Close</Button>\r\n          <Button variant=\"outline-primary\" onClick={postRace}>Save </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  function getUserCarName(carId) {\r\n    if (userCars) {\r\n      for (var car of userCars) {\r\n        if (car._id === carId) {\r\n          return car?.manufacturer.trim() +' - '+ car.model.trim() +' - '+ getClassName(car.class_id).trim()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function getUserIdByCarId(carId) {\r\n    for (var car of allCars) {\r\n      if (car._id === carId) {\r\n        return car.user._id\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  function getUserByCarId(carId) {\r\n    for (var car of allCars) {\r\n      if (car._id === carId) {\r\n        return car.user\r\n      }\r\n    }\r\n    return\r\n  }\r\n\r\n  function handleCarChange(e) {\r\n    const option = e.target.childNodes[e.target.selectedIndex]\r\n    const id = option.getAttribute('id')\r\n    setCarId(id)\r\n  }\r\n\r\n  async function putUserCarChange() {\r\n    const eventRec = await eventModel.get(event._id) \r\n    if (!eventModel.success) {\r\n      return\r\n    }\r\n    const wasPaid = eventRec.paid_user_ids && event.paid_user_ids.includes(getUserIdByCarId(oldCarId));\r\n    const entryPaidChanged = wasPaid !== entryPaid;\r\n    const userId = getUserIdByCarId(oldCarId);\r\n\r\n    if (entryPaidChanged && userId) {\r\n      if (!wasPaid) {\r\n        if (!eventRec.paid_user_ids) {\r\n          eventRec.paid_user_ids = []\r\n        }\r\n        eventRec.paid_user_ids.push(userId)\r\n      } else if (eventRec.paid_user_ids && eventRec.paid_user_ids.includes(userId)) {\r\n        eventRec.paid_user_ids.splice(eventRec.paid_user_ids.indexOf(userId), 1)\r\n      }\r\n    }\r\n\r\n    const carChanged = carId !== oldCarId\r\n\r\n    if (carChanged) {\r\n      for (let i = 0; i < eventRec.car_ids.length; i++) {\r\n        if (!eventRec.car_ids.includes(carId) && eventRec.car_ids[i] === oldCarId) {\r\n          eventRec.car_ids[i] = carId\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (entryPaidChanged || carChanged) {\r\n      const res = await eventModel.put(event._id, eventRec)\r\n      if (res && res.errorMesage) {\r\n        window.alert(res.errorMesage)\r\n      }\r\n    }\r\n\r\n    hideUserCarModal()\r\n    setRefresh(!refresh)\r\n  }\r\n\r\n  async function deleteUserCar() {\r\n    if (window.confirm(`Are you sure you want to remove this car? \\n ${getUserCarName(oldCarId)}`)) {\r\n      await eventModel.get(event._id) \r\n      let tmpEvent = eventModel.responseData\r\n      if (eventModel.success) {\r\n        tmpEvent.car_ids.splice(tmpEvent.car_ids.indexOf(oldCarId), 1)\r\n        eventModel.put(event._id, tmpEvent)\r\n        hideUserCarModal()\r\n        setRefresh(!refresh)\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  function editEntryModal() {\r\n    const user = getUserByCarId(carId);\r\n    const paymentExempt = user && !!user.paymentExempt;\r\n\r\n    return (\r\n      <Modal show={showChangeCarForm} onHide={hideUserCarModal} >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Entry {ownerName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ display: 'grid'} } >\r\n        { allowEditPaidUsers &&\r\n          <Form.Check\r\n            type={'checkbox'}\r\n            label={paymentExempt ? `Payment Exempt` : `Payment Confirmed`}\r\n            id={`cb-mark-as-paid`}\r\n            checked={entryPaid}\r\n            disabled={paymentExempt}\r\n            onChange={(e) => setEntryPaid(e.target.checked)}\r\n          />\r\n        }\r\n        <select value={getUserCarName(carId)} id='cb-user-car' onChange={(e) => handleCarChange(e)} style={{width: '100%', height: '30px'}} > \r\n          {userCars && userCars.map((car, index) => \r\n            <option id={car._id} key={index} >{getUserCarName(car._id)}</option> ) }\r\n        </select>    \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={deleteUserCar} variant=\"outline-danger\">Delete</Button>\r\n          <Button variant=\"outline-secondary\" onClick={hideUserCarModal}>Close</Button>\r\n          <Button variant=\"outline-primary\" onClick={putUserCarChange}>Save </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  function getCar(id) {\r\n    if (currentCar.hasOwnProperty('_id') && currentCar._id === id){\r\n      return currentCar\r\n    } else {\r\n      for (let i=0; i<event.cars.length; i++) {\r\n        if (event.cars[i]._id === id) {\r\n          currentCar = event.cars[i]\r\n          return event.cars[i]\r\n        }  \r\n      }\r\n    }\r\n  }\r\n\r\n  function addRaces(classId) {\r\n    function addRows(results) {\r\n      return (\r\n        results.map((item) => (\r\n          <tr key={item.car_id+'-race-result-row'}>\r\n            <td>{item.position}</td>\r\n            <td>{item.name}</td>\r\n            <td>{getCar(item.car_id)?.manufacturer}</td>\r\n            <td>{getCar(item.car_id)?.model}</td>\r\n          </tr>\r\n        ))\r\n      )\r\n    }\r\n\r\n    function addRaceResults(race) {\r\n      return (\r\n        <div key={race._id+'-div'}>\r\n          <h5 key={race._id+'-race-name'} style={{float: 'left', marginRight: '6px'}}>{race.name}</h5> \r\n          {allowDelRaces && <TrashCan key={race._id+'-del-race'} id={race._id} handleClick={() => deleteRace(race._id)} /> }\r\n          <Table key={race._id+'-race-table'} striped bordered hover size=\"sm\">\r\n            <thead key={race._id+'-race-head'}>\r\n              <tr key={race._id+'-race-head-row'}> \r\n                <th style={{width: '35px'}}>Pos</th>\r\n                <th>Name</th>\r\n                <th>Manufacturer</th>\r\n                <th>Model</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {addRows(race.results)}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )\r\n    } \r\n    function raceDeleted(race){\r\n      if (race.hasOwnProperty('deleted')) { return race.deleted } else { return false }\r\n    }\r\n\r\n    if (event && event.hasOwnProperty('races')) {\r\n      event.races.sort((a, b) => parseFloat(a.position) - parseFloat(b.position)) //sort asc by position\r\n      return (event.races.map((race, index) => ( \r\n        !raceDeleted(race) && race.class_id===classId && addRaceResults(race, index) \r\n      ))) \r\n    } else { return }\r\n  }\r\n\r\n  function showRoster() {\r\n    const filteredClasses = classesWithEntries(classes)\r\n    return (\r\n      filteredClasses.map((carClass, index) => (\r\n          <div style={{overflow: 'auto'}} key={index+'-div'}>\r\n            <h4 style={{fontWeight: 'bold',  marginRight: '12px', float: 'left'}} key={index+'-header-label'}>{carClass.name}</h4> \r\n            <Table striped bordered hover size=\"sm\" key={index+'-roster'}>\r\n              <thead key={index+'-roster-head'}>\r\n                <tr key={index+'-roster-row'}>\r\n                  <th>Name</th>\r\n                  <th>Mfr.</th>\r\n                  <th>Model</th>\r\n                  <th>Colour</th>\r\n                  <th>Tpdr.</th>\r\n                  {allowAddRaces && <th style={{width: '18px'}}></th>}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {addRacers(event.cars, carClass._id)}\r\n              </tbody>\r\n            </Table>\r\n            <div style={{display: 'flex', flexFlow: 'wrap'}}>\r\n              <h5 style={{float: 'left'}}>Race Results</h5>\r\n              {event.cars.length && allowAddRaces && <PlusButton id={carClass._id} handleClick={() => addRace(carClass._id)} /> }\r\n            </div>\r\n            {addRaces(carClass._id)}\r\n            <div style={{height: '25px'}}></div>\r\n          </div>\r\n        )\r\n      )\r\n    )\r\n  }\r\n  \r\n  const showCarsAwaitingPayment = () => {\r\n    const visibleUnpaidCars = carsAwaitingPayment.filter(car => \r\n      allowViewUnPaidUsers || car.user.extId === user.sub\r\n    );\r\n    const hasVisibleUnpaidCars = visibleUnpaidCars && visibleUnpaidCars.length > 0;\r\n\r\n    const addTableRow = (car, index) => (\r\n      <tr style={{color: 'red'}} key={index+'-pending-row'}>\r\n        <td>{car.user.firstName+' '+car.user.lastName}</td>\r\n        <td>{getClassName(car.class_id)}</td>\r\n        <td>{car.manufacturer}</td>\r\n        <td>{car.model}</td>\r\n        <td>{car.color}</td>\r\n        {allowAddRaces && <td><PencilSquare key={car._id+'-change-car'} id={car._id} handleClick={() => changeCar(car._id)} /></td>}\r\n      </tr>\r\n    )\r\n\r\n    return ( hasVisibleUnpaidCars &&\r\n      <>\r\n        <div style={{overflow: 'auto'}} key={'pending-div'}>\r\n        <h4 style={{color: 'red', fontWeight: 'bold',  marginRight: '12px', float: 'left'}} key={'pending-header-label'}>Pending Payment</h4> \r\n        <Table striped bordered hover size=\"sm\" key={'pending-roster'}>\r\n          <thead key={'pending-roster-head'}>\r\n            <tr key={'pending-roster-row'}>\r\n              <th>Name</th>\r\n              <th>Class</th>\r\n              <th>Mfr.</th>\r\n              <th>Model</th>\r\n              <th>Colour</th>\r\n              {allowAddRaces && <th style={{width: '18px'}}></th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          { visibleUnpaidCars.map((car, index) => addTableRow(car, index)) }\r\n          </tbody>\r\n        </Table>\r\n        <div style={{height: '25px'}}></div>\r\n      </div>\r\n    </>\r\n  )}\r\n\r\n  const showEventPayments = () => {\r\n    const hasPayments = event.payments && event.payments.length > 0\r\n\r\n    const addTableRow = (payment, index) => (\r\n      <tr key={index+'-payment-row'}>\r\n        <td>{payment.name}</td>\r\n        <td>{dayjs(payment.date).format('DD/MM/YYYY')}</td>\r\n        <td>{payment.amount} {payment.currency}</td>\r\n        <td>{payment.transaction_id}</td>\r\n      </tr>\r\n    )\r\n\r\n    return ( allowViewPayments && hasPayments &&\r\n      <>\r\n        <div style={{overflow: 'auto'}} key={'payments-div'}>\r\n        <h4 style={{fontWeight: 'bold',  marginRight: '12px', float: 'left'}} key={'payments-header-label'}>Payments</h4> \r\n        <Table striped bordered hover size=\"sm\" key={'payments-roster'}>\r\n          <thead key={'payments-roster-head'}>\r\n            <tr key={'payments-roster-row'}>\r\n              <th>Name</th>\r\n              <th>Date</th>\r\n              <th>Amount</th>\r\n              <th>Transaction ID</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          { event.payments.map((payment, index) => addTableRow(payment, index)) }\r\n          </tbody>\r\n        </Table>\r\n        <div style={{height: '25px'}}></div>\r\n      </div>\r\n    </>\r\n  )}\r\n\r\n  if (loading) {\r\n    return <Loading /> \r\n  } else if (event) {\r\n    return <>\r\n      <Header props={{header: `${event.name}`, subHeader: dayjs(event.date).format('DD/MM/YYYY')}} /> \r\n      <div style={{display: 'grid', justifyContent: 'center'}}>\r\n        <div style={{display: 'grid', justifyContent: 'center'}}>\r\n          <a style={{fontSize:'9px', justifyContent: 'center'}} href='#' onClick={() => history.push(`../events/${event._id}`)}>Standard View</a>\r\n        </div>\r\n        { carsAwaitingPayment.length > 0 && showCarsAwaitingPayment()}\r\n        { showRoster() }  \r\n        { allowAddRaces && raceForm() }\r\n        { allowEditEvents && editEntryModal() }\r\n        { event && event.payments && event.payments.length > 0 && showEventPayments()}\r\n      </div>\r\n    </>\r\n  } else return <h2>Not found</h2>\r\n}\r\n\r\nexport default withAuthenticationRequired(EventDetailOld, { onRedirecting: () => (<Loading />) })",{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"259","replacedBy":"263"},{"ruleId":"261","replacedBy":"264"},{"ruleId":"259","replacedBy":"265"},{"ruleId":"261","replacedBy":"266"},{"ruleId":"259","replacedBy":"267"},{"ruleId":"261","replacedBy":"268"},{"ruleId":"259","replacedBy":"269"},{"ruleId":"261","replacedBy":"270"},{"ruleId":"259","replacedBy":"271"},{"ruleId":"261","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":721,"column":11,"nodeType":"275","endLine":721,"endColumn":137},{"ruleId":"259","replacedBy":"276"},{"ruleId":"261","replacedBy":"277"},{"ruleId":"259","replacedBy":"278"},{"ruleId":"261","replacedBy":"279"},{"ruleId":"259","replacedBy":"280"},{"ruleId":"261","replacedBy":"281"},{"ruleId":"259","replacedBy":"282"},{"ruleId":"261","replacedBy":"283"},{"ruleId":"259","replacedBy":"284"},{"ruleId":"261","replacedBy":"285"},{"ruleId":"259","replacedBy":"286"},{"ruleId":"261","replacedBy":"287"},{"ruleId":"259","replacedBy":"288"},{"ruleId":"261","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":153,"column":9,"nodeType":"275","endLine":153,"endColumn":80},{"ruleId":"259","replacedBy":"292"},{"ruleId":"261","replacedBy":"293"},{"ruleId":"259","replacedBy":"294"},{"ruleId":"261","replacedBy":"295"},{"ruleId":"273","severity":1,"message":"274","line":648,"column":11,"nodeType":"275","endLine":648,"endColumn":129},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],["296"],["297"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["296"],["297"],["296"],["297"],"no-global-assign","no-unsafe-negation"]