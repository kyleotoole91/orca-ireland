[{"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Profile.js":"1","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\SideBar.js":"2","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\styles.js":"3","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuItems.js":"4","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\index.js":"5","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\permissions.js":"6","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuBar.js":"7","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Loading.js":"8","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\index.js":"9","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\auth\\auth0-provider-with-history.js":"10","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\App.js":"11","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Events.js":"12","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\BaseModel.js":"13","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\EventModel.js":"14","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Garage.js":"15","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\CarModel.js":"16","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Membership.js":"17","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\ClassModel.js":"18","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\UserModel.js":"19","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\MembershipModel.js":"20","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\DateUtils.js":"21","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\theme.js":"22","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js":"23","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Home.js":"24","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\EventDetail.js":"25"},{"size":2700,"mtime":1637880346466,"results":"26","hashOfConfig":"27"},{"size":1964,"mtime":1638218658499,"results":"28","hashOfConfig":"27"},{"size":766,"mtime":1635705911118,"results":"29","hashOfConfig":"27"},{"size":1285,"mtime":1638232443819,"results":"30","hashOfConfig":"27"},{"size":442,"mtime":1613420341639,"results":"31","hashOfConfig":"27"},{"size":544,"mtime":1637694340335,"results":"32","hashOfConfig":"27"},{"size":2229,"mtime":1638231213281,"results":"33","hashOfConfig":"27"},{"size":585,"mtime":1634915506565,"results":"34","hashOfConfig":"27"},{"size":147,"mtime":1634677167416,"results":"35","hashOfConfig":"27"},{"size":809,"mtime":1635460137850,"results":"36","hashOfConfig":"27"},{"size":1884,"mtime":1638218494941,"results":"37","hashOfConfig":"27"},{"size":16839,"mtime":1638307521580,"results":"38","hashOfConfig":"27"},{"size":7779,"mtime":1638307867866,"results":"39","hashOfConfig":"27"},{"size":1147,"mtime":1638306212140,"results":"40","hashOfConfig":"27"},{"size":9022,"mtime":1638307732778,"results":"41","hashOfConfig":"27"},{"size":1293,"mtime":1638236000781,"results":"42","hashOfConfig":"27"},{"size":9471,"mtime":1638140402439,"results":"43","hashOfConfig":"27"},{"size":198,"mtime":1638046703960,"results":"44","hashOfConfig":"27"},{"size":728,"mtime":1638046972615,"results":"45","hashOfConfig":"27"},{"size":807,"mtime":1638121113204,"results":"46","hashOfConfig":"27"},{"size":532,"mtime":1638218966825,"results":"47","hashOfConfig":"27"},{"size":491,"mtime":1638228518693,"results":"48","hashOfConfig":"27"},{"size":587,"mtime":1638119313051,"results":"49","hashOfConfig":"27"},{"size":1268,"mtime":1638231239967,"results":"50","hashOfConfig":"27"},{"size":3670,"mtime":1638300561529,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"11peuma",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Profile.js",[],["106","107"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\SideBar.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\styles.js",[],["108","109"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuItems.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\index.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\permissions.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\MenuBar.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\Loading.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\components\\index.js",[],["110","111"],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\auth\\auth0-provider-with-history.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\App.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Events.js",["112"],"import { React, useState, useEffect } from 'react'\r\nimport { useAuth0, withAuthenticationRequired } from \"@auth0/auth0-react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Accordion  from 'react-bootstrap/Accordion'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Loading from '../components/Loading'\r\nimport dayjs from 'dayjs'\r\nimport { Permissions } from '../utils/permissions'\r\nimport NumberFormat from 'react-number-format'\r\nimport { EventModel } from '../models/EventModel'\r\nimport { CarModel } from '../models/CarModel'\r\nimport { DateUtils } from '../utils/DateUtils'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst eventModel = new EventModel()\r\nconst dateUtils = new DateUtils()\r\nconst eventStartTimeHours = 10\r\nlet todayDate = new Date(Date.now())\r\nlet todayDateCtrl = dateUtils.formatDate(todayDate, 'yyyy-mm-dd')\r\nlet defaultEventDate = new Date(Date.now())\r\ndefaultEventDate.setHours(eventStartTimeHours)\r\ndefaultEventDate.setMinutes(0)\r\n\r\nfunction Events() {\r\n  const history = useHistory()\r\n  const { user, isAuthenticated, loginWithRedirect, getAccessTokenSilently } = useAuth0()\r\n  const [name, setName] = useState('')\r\n  const [location, setLocation] = useState(\"Saint Anne's Park\")\r\n  const [date, setDate] = useState(todayDateCtrl)\r\n  const [eventDate, setEventDate] = useState(defaultEventDate)\r\n  const [fee, setFee] = useState(10.00)\r\n  const [data, setData] = useState([])\r\n  const [currentEvent, setCurrentEvent] = useState([])\r\n  const [car_ids, setCar_ids] = useState([])\r\n  const [carData, setCarData] = useState([])\r\n  const [apiToken, setApiToken] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [allowAddEvents, setAllowAddEvents] = useState(false)\r\n  const [allowDelEvents, setAllowDelEvents] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n  const [showEnter, setShowEnter] = useState(false)\r\n  const [selectedEventId, setSelectedEventId] = useState('')\r\n  const [selectedEvent, setSelectedEvent] = useState()\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [loadingAllEvents, setLoadingAllEvents] = useState(false)\r\n  const [allEventsExpanded, setAllEventsExpanded] = useState(false)\r\n  const [editing, setEditing] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const handleCloseEnter = () => { \r\n    setCar_ids([])\r\n    setShowEnter(false) \r\n  }\r\n\r\n  async function handleShowEnter (e) { \r\n    await selectEvent(e.target.id.toString())\r\n    setShowEnter(true) \r\n  }\r\n\r\n  async function selectEvent(eventId){\r\n    await eventModel.get(eventId)\r\n    if (eventModel.success) {\r\n      setSelectedEventId(eventId)\r\n      setSelectedEvent(eventModel.responseData)   \r\n      return eventModel.responseData\r\n    } else {\r\n      setSelectedEventId('')\r\n      setSelectedEvent() \r\n      return\r\n    }\r\n  }\r\n\r\n  if (apiToken === '') {\r\n    if (!isAuthenticated) {\r\n      loginWithRedirect()\r\n    } else {\r\n      getApiToken()\r\n    }\r\n  } else { \r\n    eventModel.setApiToken(apiToken)\r\n  }\r\n\r\n  async function getApiToken() {\r\n    let token = await getAccessTokenSilently({ audience: process.env.REACT_APP_AUTH0_AUDIENCE })\r\n    eventModel.setApiToken(token)\r\n    setApiToken(token)   \r\n  }\r\n\r\n  function addCar(id){\r\n    if (car_ids.indexOf(id) === -1) {\r\n      car_ids.push(id)   \r\n    } else {\r\n      car_ids.splice(car_ids.indexOf(id), 1) \r\n    }\r\n    setCar_ids(car_ids)\r\n  }\r\n\r\n  function carInEvent(carId) {\r\n    let found = false\r\n    if (selectedEventId !== '') {\r\n      if (selectedEvent && selectedEvent.hasOwnProperty('car_ids')) {\r\n        for (var car_id of selectedEvent.car_ids) {\r\n          found = car_id === carId \r\n          if (found) { \r\n            if (car_ids.indexOf(carId) === -1) {\r\n              car_ids.push(carId) \r\n            }\r\n            break \r\n          }\r\n        }\r\n      }\r\n    }\r\n    return found\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function loadData () {\r\n      setLoading(true)\r\n      if (apiToken !== '') {\r\n        try {\r\n          const eventModel = new EventModel(apiToken)\r\n          const carModel = new CarModel(apiToken)\r\n          const permissions = new Permissions()\r\n          setAllowAddEvents(permissions.check(apiToken, 'post', 'events'))\r\n          setAllowDelEvents(permissions.check(apiToken, 'delete', 'events'))\r\n          let currEvent = await eventModel.getCurrentEvent()\r\n          if (eventModel.success) {\r\n            if (eventModel.responseData.length > 0) {\r\n              setCurrentEvent(eventModel.responseData)\r\n              setSelectedEvent(eventModel.responseData[0])\r\n              setSelectedEventId(eventModel.responseData[0]._id)\r\n            }\r\n          } else {\r\n            window.alert(eventModel.message)\r\n          }\r\n          let noCurrentEvent = !currEvent || currEvent.length === 0\r\n          if (noCurrentEvent) {\r\n            await eventModel.get()\r\n            if (eventModel.success) {\r\n              setData(eventModel.responseData)\r\n              setLoadingAllEvents(false)\r\n              setAllEventsExpanded(true)\r\n            } else {\r\n              console.log(eventModel.message)\r\n            }\r\n          }\r\n          await carModel.getUserDocs(user.sub)\r\n          if (carModel.success) {\r\n            setCarData(carModel.responseData)\r\n          }  \r\n        } catch(e) {\r\n          window.alert(e)\r\n        } finally {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    }  \r\n    loadData()\r\n  }, [refresh, apiToken, user.sub])\r\n\r\n  async function deleteEvent() {\r\n    try {\r\n      if (window.confirm('Are you sure you want to delete this event?')) {\r\n        await eventModel.delete(selectedEventId.toString())\r\n        if (eventModel.success) {\r\n          setRefresh(!refresh)\r\n          handleClose()\r\n        } else {\r\n          window.alert(eventModel.message)\r\n        }\r\n      }\r\n    } catch(e) {\r\n      window.alert(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function postEvent() {\r\n    try {\r\n      let date = eventDate\r\n      await eventModel.post({name, location, date, fee})\r\n      if (eventModel.success) {\r\n        setRefresh(!refresh)\r\n        handleClose()\r\n      } else {\r\n        window.alert(eventModel.message) \r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function putEvent() {\r\n    try {\r\n      let date = eventDate\r\n      await eventModel.put(selectedEventId, {name, location, date, fee})\r\n      if (eventModel.success) {\r\n        handleClose()\r\n      } else {\r\n        window.alert(eventModel.message) \r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  async function enterEvent() {\r\n    try {    \r\n      await eventModel.enterEvent(selectedEventId, car_ids)\r\n      if (eventModel.success) {\r\n        setRefresh(!refresh)\r\n        handleCloseEnter()\r\n      } else {\r\n        window.alert(eventModel.message)  \r\n      }\r\n    } catch(e) {\r\n      window.alert(e)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  function eventDateChange(stringDate) {\r\n    let date = new Date(stringDate)\r\n    date.setHours(eventStartTimeHours)\r\n    setEventDate(date)\r\n    setDate(stringDate)  \r\n  }\r\n\r\n  /*function nextEventExpand(){\r\n    if (currentEvent && currentEvent.length > 0) {\r\n      return '0'\r\n    } else {\r\n      return '1'  \r\n    }\r\n  }\r\n\r\n  function allEventsExpand(){\r\n    if (currentEvent && currentEvent.length > 0) {\r\n      return '1'\r\n    } else {\r\n      return '0'  \r\n    }  \r\n  }*/\r\n\r\n  async function allEventsClick(){\r\n    try {\r\n      if (!allEventsExpanded) {\r\n        setLoadingAllEvents(true)\r\n        await eventModel.get()\r\n        if (eventModel.success) {\r\n          setData(eventModel.responseData)\r\n        }  \r\n      } \r\n    } finally {\r\n      setLoadingAllEvents(false)\r\n      setAllEventsExpanded(!allEventsExpanded)\r\n    }\r\n  }\r\n\r\n  function showEventDetails(e) {\r\n    history.push('/events/'+e.target.id)\r\n  }\r\n\r\n  function getCurrentEventCard(){\r\n    if (loading) {\r\n      return <div className=\"text-center\">\r\n               <Spinner animation=\"border\" variant=\"primary\"/>\r\n             </div>\r\n    } else if (currentEvent && currentEvent.length > 0) {\r\n      return (\r\n        <div style={{display: 'flex', flexFlow: 'wrap'}}>\r\n          {addCards(currentEvent, true)}\r\n        </div>    \r\n      )\r\n    } else {\r\n      return ( <h4>No upcoming event</h4> )\r\n    }\r\n  }\r\n\r\n  function getAllEventCards(){\r\n    if (loadingAllEvents) {\r\n      return <div className=\"text-center\">\r\n               <Spinner animation=\"border\" variant=\"primary\"/>\r\n             </div>\r\n    } else if (data && data.length > 0) {\r\n      return (\r\n        <div style={{display: 'flex', flexFlow: 'wrap'}}>\r\n          {addCards(data)}\r\n        </div>    \r\n      )\r\n    } else {\r\n      return ( <h4>No events</h4> )\r\n    }\r\n  }\r\n\r\n  async function editEvent(e) {\r\n    let selEvent = await selectEvent(e.target.id.toString())\r\n    if (selEvent) {\r\n      setEditing(true)\r\n      setName(selEvent.name)\r\n      setLocation(selEvent.location)\r\n      setEventDate(new Date(selEvent.date))\r\n      setDate(dateUtils.formatDate(new Date(selEvent.date), 'yyyy-mm-dd')) \r\n      setFee(selEvent.fee)\r\n      handleShow()\r\n    } else {\r\n      window.alert('Error loading event')\r\n    }\r\n  } \r\n\r\n  function addEvent() {\r\n    setEditing(false)\r\n    setName('')\r\n    setLocation(\"Saint Anne's Park\")\r\n    setEventDate(todayDate)\r\n    setDate(todayDateCtrl) \r\n    setFee(10)\r\n    handleShow()\r\n  } \r\n\r\n  function saveEvent(){\r\n    if (editing) {\r\n      putEvent(selectedEventId.toString())\r\n    } else {\r\n      postEvent()\r\n    }\r\n  }\r\n\r\n  function addCards(events, showEnter) {\r\n    return (\r\n      events.map((event, index) => (\r\n        <Card style={{minWidth: '225px', maxWidth: '225px', margin: '3px', zIndex: 0}} key={index}>\r\n          <Card.Header>{event.name}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>{event.location}</Card.Title>\r\n            <Card.Text>Entry fee €{event.fee}</Card.Text>\r\n            <Card.Text>{dayjs(event.date).format('DD/MM/YYYY')}</Card.Text>\r\n            {showEnter && <Button onClick={handleShowEnter} id={event._id}  style={{width: \"100%\"}} variant=\"outline-primary\">Enter</Button> } \r\n            <Button id={event._id} onClick={showEventDetails} style={{marginTop: \"3px\", width: \"100%\"}} variant=\"outline-secondary\">Details</Button>\r\n            {allowDelEvents && <Button id={event._id} style={{marginTop: \"3px\", width: \"100%\"}} onClick={editEvent} variant=\"outline-warning\">Edit</Button> }\r\n          </Card.Body>\r\n        </Card>)\r\n      )\r\n    )\r\n  }\r\n\r\n  function headerText(){\r\n    if (editing) {\r\n      return 'Edit event'\r\n    } else {\r\n      return 'Add event'\r\n    }\r\n  }\r\n  \r\n  function modalForm(){\r\n    return ( \r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{headerText()}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ display: 'grid', fontFamily: \"monospace\"}} >\r\n          <label style={{ margin: '3px' }} >\r\n            Name: &nbsp;&nbsp;&nbsp;&nbsp; \r\n            <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" id=\"eventName\" name=\"event-name\" />\r\n          </label>\r\n          <label style={{ margin: '3px' }} >\r\n            Location: <input value={location} onChange={(e) => setLocation(e.target.value)} type=\"text\" id=\"eventLocation\" name=\"event-location\" />\r\n          </label>\r\n          <label style={{ margin: '3px' }} >\r\n            Date: &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <input value={date} onChange={(e) => eventDateChange(e.target.value)} type=\"date\" id=\"eventDate\" name=\"event-date\" min={todayDateCtrl} />\r\n          </label>\r\n          <label style={{ margin: '3px' }} >\r\n            Fee: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <NumberFormat id=\"eventFee\" name=\"event-fee\"  value={fee} onChange={(e) => setFee(e.target.value)} thousandSeparator={ true } prefix={ \"€\" } />\r\n          </label>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            {allowDelEvents && editing && <Button onClick={deleteEvent} variant=\"outline-danger\">Delete</Button> }\r\n            <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"outline-primary\" onClick={saveEvent}>\r\n              Save\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  function modalEnterEvent(){\r\n    function carCheckList () {\r\n      function carItem(car, index) {\r\n        return (\r\n          <InputGroup key={car._id+index} className=\"mb-3\">\r\n            <InputGroup.Checkbox key={car._id} id={car._id} defaultChecked={carInEvent(car._id)} onChange={(e) => addCar(e.target.id)} aria-label=\"Checkbox for following text input\" />\r\n            <FormControl key={car._id+'-FormControl'} onChange={(e) => addCar(e.target.id)} value={car.manufacturer+' - '+car.model } aria-label=\"Text input with checkbox\" />\r\n          </InputGroup>\r\n        )\r\n      }    \r\n      return (\r\n        <>\r\n          {carData && carData.map((car, index) => carItem(car, index) ) }\r\n        </>  \r\n      )\r\n    }\r\n    return ( \r\n      <Modal show={showEnter} onHide={handleCloseEnter}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Enter Event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body style={{ display: 'grid', fontFamily: \"monospace\"}} >\r\n          <p>Select your car(s)</p>\r\n          {carCheckList()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"outline-secondary\" onClick={handleCloseEnter}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"outline-primary\" onClick={enterEvent}>\r\n              Enter Event\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Modal>   \r\n    )\r\n  }\r\n\r\n  //for split second, data is still undefined although loading state was set to true after data set was set \r\n  if (loading) {\r\n    return ( <Loading /> )\r\n  } else {\r\n    return (\r\n      <div>\r\n        {allowAddEvents && <Button onClick={addEvent} style={{marginLeft: \"3px\", marginBottom: \"3px\"}} variant=\"outline-primary\">Add Event</Button> }\r\n        {modalForm()}\r\n        {modalEnterEvent()}\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Accordion.Item eventKey=\"0\">\r\n            <StyledAccordionHeader>Next Event</StyledAccordionHeader>\r\n            <Accordion.Body>\r\n              {getCurrentEventCard()} \r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n          <Accordion.Item eventKey=\"1\">\r\n            <StyledAccordionHeader onClick={allEventsClick}>All Events</StyledAccordionHeader>\r\n            <Accordion.Body>\r\n              {getAllEventCards()} \r\n            </Accordion.Body>\r\n          </Accordion.Item>\r\n        </Accordion>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst StyledAccordionHeader  = styled(Accordion.Header)`\r\n  accordion-button:focus {\r\n    z-index: 0\r\n  }\r\n`\r\n\r\nexport default withAuthenticationRequired(Events, { onRedirecting: () => (<Loading />) });\r\n\r\n//Alternative to declaring functions such as loadData() in useEffect(). Memoize with useCallback()\r\n/* \r\nfunction MyComponent() {\r\n\r\n  const [data, setData] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const { logout, loginWithRedirect,  user, isAuthenticated, getAccessTokenSilently } = useAuth0()\r\n  var profilePic = DefaultProfilePng\r\n  var username = 'Sign In'\r\n\r\n  if (user != null) {\r\n    console.log(user)    \r\n    token = getApiToken();\r\n    console.log(token)\r\n    profilePic = user.picture\r\n    if (user.name != null) {\r\n      username = user.name;\r\n    } else {\r\n      username = user.nickname;\r\n    }\r\n  }\r\n\r\n  //Alternative to declaring function in useEffect: Memoize with useCallback()\r\n  const loadData= useCallback(() => {\r\n    //Request code here\r\n    }, [])\r\n  useEffect(() => {\r\n      loadData()\r\n  }, [loadData])\r\n \r\n  async function getApiToken() {\r\n    return await getAccessTokenSilently();\r\n  }\r\n  \r\n  const loadAsyncData = async () => {\r\n  \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const resp = await fetch('https://...').then(r=>r.json());\r\n      setData(resp);\r\n      setIsLoading(false);\r\n    } catch(e) {\r\n      setError(e);\r\n      setIsLoading(false);\r\n    }\r\n    \r\n  }\r\n  \r\n  useEffect(() => {\r\n    \r\n    loadAsyncData();\r\n    \r\n  }, []);\r\n  \r\n    \r\n  if(this.state.isLoading) return (<p>Loading...</p>);\r\n  if(this.state.error) return (<p>Something went wrong</p>);\r\n  if(this.state.data) return (<p>The data is: {data}</p>);\r\n  return (<p>No data yet</p>);\r\n    \r\n}\r\n\r\n*/","C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\BaseModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\EventModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Garage.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\CarModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Membership.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\ClassModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\UserModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\models\\MembershipModel.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\DateUtils.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\theme.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\utils\\WindowSize.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\Home.js",[],"C:\\Users\\kyle-\\Web Dev\\orca-ireland\\ui-react\\src\\views\\EventDetail.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":null,"fatal":true,"severity":2,"message":"121","line":364,"column":20},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],["122"],["123"],"Parsing error: Unexpected token, expected \";\"\n\n  362 |   \n  363 |   function modalForm(){\n> 364 |     let headerText 1\n      |                    ^\n  365 |     return ( \n  366 |       <Modal show={show} onHide={handleClose}>\n  367 |         <Modal.Header closeButton>","no-global-assign","no-unsafe-negation"]